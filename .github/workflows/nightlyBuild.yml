on:
    workflow_dispatch:
        inputs:
            bType:
                description: Boundary Type (Required)
                required: true
            ISO:
                description: Boundary ISO (Required)
                required: true
            ADM:
                description: Boundary ADM Level
                required: true

name: NightlyBuild
jobs:
  gbBuild:
    runs-on: ubuntu-latest
    container: osgeo/gdal:ubuntu-small-latest
    steps:
    - name: Initialize Linux Environment
      run: |
           apt-get update
           apt-get install -y software-properties-common
           add-apt-repository ppa:git-core/ppa
           apt-get update
           apt-get install -y git
           
    - name: Check if build needed
      id: buildCheck
      continue-on-error: true
      run: |
           git clone https://github.com/wmgeolab/geoBoundaryBot
           python geoBoundaryBot/gbBuildCheck.py ${{secrets.DRTOKEN}} ${{github.event.inputs.ISO}} ${{github.event.inputs.ADM}} ${{github.event.inputs.bType}}
           
        
    
    - name: Finish Linux Environment Build
      if: steps.buildCheck.outcome == 'success'
      run: |
           curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
           apt-get install git-lfs
           apt-get install -y python3-pip
           apt-get install -y npm
           npm install -g mapshaper
           pip3 install geopandas
           pip3 install matplotlib
           pip3 install PyGithub

    - name: Download Repository Code
      if: steps.buildCheck.outcome == 'success'
      uses: actions/checkout@v2.3.2
      with:
        lfs: true
        persist-credentials: false
   
    - name: Install File Check Scripts into Repository
      if: steps.buildCheck.outcome == 'success'
      run: |
            git fetch
            git clone https://github.com/wmgeolab/geoBoundaryBot
   
    - name: Checking Files
      if: steps.buildCheck.outcome == 'success'
      id: checks
      run: |
           echo "==============================================="
           mkdir ~/tmp 
           mkdir ~/artifacts
           python geoBoundaryBot/gbBuild.py ${{github.event.inputs.bType}} nightly ${{github.event.inputs.ISO}} ${{github.event.inputs.ADM}} ${{secrets.DRTOKEN}}
      env:
           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
    - name: Commit Files
      if: steps.buildCheck.outcome == 'success'
      env:
            DRTOKEN: ${{secrets.DRTOKEN}}
            REP: ${{env.GITHUB_REPOSITORY}}
      run: |
           git config --local user.email "danr@wm.edu"
           git config --local user.name "DanRunfola"
           git fetch
           git pull
           git add -A .
           git diff-index --quiet HEAD || git commit -m "geoBoundary Status and Build Script"
           git status
           git remote set-url origin https://x-access-token:${{ secrets.DRTOKEN }}@github.com/$GITHUB_REPOSITORY
           git push origin main 

       
        
    - name: Create Artifact
      if: steps.buildCheck.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: ~/artifacts/
        

  
