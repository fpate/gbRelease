on:
    workflow_dispatch:
        inputs:
            bType:
                description: Boundary Type (Required)
                required: true
            ISO:
                description: Boundary ISO (Required)
                required: true
            ADM:
                description: Boundary ADM Level
                required: true
                
name: yDISPATCH_gBLayer
jobs:
  gbBuild:
    runs-on: ubuntu-latest
    container: docker://geogdan/geoboundaries:A
    steps:
    - name: Git LFS Ignore Paths
      run: |
           git config --global lfs.fetchinclude 'sourceData/${{github.event.inputs.bType}}/${{github.event.inputs.ISO}}_${{github.event.inputs.ADM}}.zip'
    - name: Download Repository Code
      uses: actions/checkout@v2.3.2
      with:
        lfs: true
        persist-credentials: false
   
    - name: Install File Check Scripts into Repository
      run: |
            git fetch
            git clone https://github.com/wmgeolab/geoBoundaryBot
   
    - name: Checking Files
      id: checks
      run: |
           echo "==============================================="
           mkdir ~/tmp 
           mkdir ~/artifacts
           python geoBoundaryBot/gbBuild.py ${{github.event.inputs.bType}} nightly ${{github.event.inputs.ISO}} ${{github.event.inputs.ADM}} ${{secrets.DRTOKEN}}
      env:
           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    - name: Turnstyle
      uses: softprops/turnstyle@v1
      env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
    - name: Commit Files
      env:
            DRTOKEN: ${{secrets.DRTOKEN}}
            REP: ${{env.GITHUB_REPOSITORY}}
      run: |
           git config --local user.email "danr@wm.edu"
           git config --local user.name "DanRunfola"
           git config --global http.postBuffer 500M
           git config --global http.maxRequestBuffer 100M
           git config --global core.compression 0
           rm RESULT.txt
           git status
           git fetch
           git checkout .gitattributes
           git status
           find * -type f -size +99M -exec git lfs track --filename '{}' +
           git status
           git add -A .
           git status
           git commit -m "gB Nightly `date`"
           git status
           git pull
           git status
           git push origin main
        
    - name: Create Artifact
      uses: actions/upload-artifact@v2
      with:
        name: results
        path: ~/artifacts/
